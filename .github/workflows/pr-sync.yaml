name: Create Release

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  create-release:
    name: Create release
    if: github.event.pull_request.merged == true && ( startsWith(github.head_ref, 'release/') || startsWith(github.head_ref, 'hotfix/') )
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # The release and hotfix branch is like release/v1.0.0 or hotfix/v1.0.0
      - name: Extract version
        id: extract_version
        run: |
          echo "version=${GITHUB_HEAD_REF##*/}" >> $GITHUB_OUTPUT
      - name: Create tag
        id: create_tag
        run: |
          git tag ${{ steps.extract_version.outputs.version }}
          git push origin ${{ steps.extract_version.outputs.version }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          name: ${{ steps.extract_version.outputs.version }}
          tag_name: ${{ steps.extract_version.outputs.version }}
  pr-sync:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: devel
      - name: Promotion branch
        run: |
          git fetch origin main:main
          git reset --hard main
      - uses: peter-evans/create-pull-request@v5
        name: Create Pull Request
        env:
          GIT_TAG: ${{needs.create-release.outputs.version}}
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          branch: update/${{ env.GIT_TAG }}
          title: Update devel branch
          body: |
            This PR updates the devel branch with the latest changes from main.
          delete-branch: true
